{
  "address": "0x1277De3F7E95334FA3063787714104Deb9BAdd7D",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAdress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x13140a7fea6f5a66b34da1067681ecf6e1b7b37e7f28f5697396a45647871c74",
  "receipt": {
    "to": null,
    "from": "0x26FE4e1eB8401a8C031c15521AF7f5a7824EFb50",
    "contractAddress": "0x1277De3F7E95334FA3063787714104Deb9BAdd7D",
    "transactionIndex": 99,
    "gasUsed": "1046077",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x2fd8b4bee9d79837e2a0012d46a91e3467a4f10d270ea3dba8024f37177fa231",
    "transactionHash": "0x13140a7fea6f5a66b34da1067681ecf6e1b7b37e7f28f5697396a45647871c74",
    "logs": [],
    "blockNumber": 6518933,
    "cumulativeGasUsed": "19836702",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 2,
  "solcInputHash": "72e128e1e2d6b482cb6edc0c8926c620",
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAdress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address[] public s_funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public /* immutable */ i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n    AggregatorV3Interface public priceFeed;\\n    constructor(address priceFeedAdress) {\\n        i_owner = msg.sender;\\n        priceFeed=AggregatorV3Interface(priceFeedAdress);\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n    \\n    \\n    \\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n    \\n    function withdraw() public onlyOwner {\\n        for (uint256 funderIndex=0; funderIndex < s_funders.length; funderIndex++){\\n            address funder = s_funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public onlyOwner {\\n        address[] memory funders=s_funders; \\n        for (uint256 funderIndex=0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n    \\n\\n}\",\"keccak256\":\"0xa19513db099a253196fdd4f6ff56a24886104f6122afe7ad9898db465a883c28\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        // Sepolia ETH / USD Address\\n        // https://docs.chain.link/data-feeds/price-feeds/addresses#Sepolia%20Testnet\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n        // or (Both will do the same thing)\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(uint256 ethAmount,AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\",\"keccak256\":\"0x42751a6e8b4ecc3ccb738d6f72bc138adb1a95ab6e0acd71be42c2687b7aa26f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200128f3803806200128f83398181016040528101906200003791906200012a565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f282620000c5565b9050919050565b6200010481620000e5565b81146200011057600080fd5b50565b6000815190506200012481620000f9565b92915050565b600060208284031215620001435762000142620000c0565b5b6000620001538482850162000113565b91505092915050565b611123806200016c6000396000f3fe60806040526004361061007b5760003560e01c8063741bef1a1161004e578063741bef1a1461013c578063b60d428814610167578063be2693f014610171578063dba6335f146101885761007b565b80633ccfd60b146100805780633e47d6f31461009757806354861af7146100d45780636b69a59214610111575b600080fd5b34801561008c57600080fd5b506100956101b3565b005b3480156100a357600080fd5b506100be60048036038101906100b99190610a5c565b6103f5565b6040516100cb9190610aa2565b60405180910390f35b3480156100e057600080fd5b506100fb60048036038101906100f69190610ae9565b61040d565b6040516101089190610b25565b60405180910390f35b34801561011d57600080fd5b5061012661044c565b6040516101339190610aa2565b60405180910390f35b34801561014857600080fd5b50610151610459565b60405161015e9190610b9f565b60405180910390f35b61016f61047f565b005b34801561017d57600080fd5b506101866105b9565b005b34801561019457600080fd5b5061019d61085f565b6040516101aa9190610b25565b60405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461023a576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156102e5576000600182815481106102605761025f610bba565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806102dd90610c18565b91505061023d565b50600067ffffffffffffffff81111561030157610300610c60565b5b60405190808252806020026020018201604052801561032f5781602001602082028036833780820191505090505b5060019080519060200190610345929190610952565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161036c90610cc0565b60006040518083038185875af1925050503d80600081146103a9576040519150601f19603f3d011682016040523d82523d6000602084013e6103ae565b606091505b50509050806103f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e990610d32565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6001818154811061041d57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b18800006104be600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461088590919063ffffffff16565b10156104ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f690610d9e565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461054d9190610dbe565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610640576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106c457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161067a575b5050505050905060005b815181101561074e5760008282815181106106ec576106eb610bba565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061074690610c18565b9150506106ce565b50600067ffffffffffffffff81111561076a57610769610c60565b5b6040519080825280602002602001820160405280156107985781602001602082028036833780820191505090505b50600190805190602001906107ae929190610952565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516107d590610cc0565b60006040518083038185875af1925050503d8060008114610812576040519150601f19603f3d011682016040523d82523d6000602084013e610817565b606091505b505090508061085b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085290610d32565b60405180910390fd5b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080610891836108c1565b90506000670de0b6b3a764000085836108aa9190610e14565b6108b49190610e9d565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561090f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109339190610f5b565b5050509150506402540be4008161094a9190610fd6565b915050919050565b8280548282559060005260206000209081019282156109cb579160200282015b828111156109ca5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610972565b5b5090506109d891906109dc565b5090565b5b808211156109f55760008160009055506001016109dd565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a29826109fe565b9050919050565b610a3981610a1e565b8114610a4457600080fd5b50565b600081359050610a5681610a30565b92915050565b600060208284031215610a7257610a716109f9565b5b6000610a8084828501610a47565b91505092915050565b6000819050919050565b610a9c81610a89565b82525050565b6000602082019050610ab76000830184610a93565b92915050565b610ac681610a89565b8114610ad157600080fd5b50565b600081359050610ae381610abd565b92915050565b600060208284031215610aff57610afe6109f9565b5b6000610b0d84828501610ad4565b91505092915050565b610b1f81610a1e565b82525050565b6000602082019050610b3a6000830184610b16565b92915050565b6000819050919050565b6000610b65610b60610b5b846109fe565b610b40565b6109fe565b9050919050565b6000610b7782610b4a565b9050919050565b6000610b8982610b6c565b9050919050565b610b9981610b7e565b82525050565b6000602082019050610bb46000830184610b90565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c2382610a89565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610c5557610c54610be9565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610caa600083610c8f565b9150610cb582610c9a565b600082019050919050565b6000610ccb82610c9d565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d1c600b83610cd5565b9150610d2782610ce6565b602082019050919050565b60006020820190508181036000830152610d4b81610d0f565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610d88601b83610cd5565b9150610d9382610d52565b602082019050919050565b60006020820190508181036000830152610db781610d7b565b9050919050565b6000610dc982610a89565b9150610dd483610a89565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e0957610e08610be9565b5b828201905092915050565b6000610e1f82610a89565b9150610e2a83610a89565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e6357610e62610be9565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ea882610a89565b9150610eb383610a89565b925082610ec357610ec2610e6e565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610eed81610ece565b8114610ef857600080fd5b50565b600081519050610f0a81610ee4565b92915050565b6000819050919050565b610f2381610f10565b8114610f2e57600080fd5b50565b600081519050610f4081610f1a565b92915050565b600081519050610f5581610abd565b92915050565b600080600080600060a08688031215610f7757610f766109f9565b5b6000610f8588828901610efb565b9550506020610f9688828901610f31565b9450506040610fa788828901610f46565b9350506060610fb888828901610f46565b9250506080610fc988828901610efb565b9150509295509295909350565b6000610fe182610f10565b9150610fec83610f10565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561102b5761102a610be9565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561106857611067610be9565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156110a5576110a4610be9565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156110e2576110e1610be9565b5b82820290509291505056fea26469706673582212201ad1d4b3f9aa4278911137921eb7b7b3a276dcde170f750cf686adf2f5b7c96e64736f6c634300080e0033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c8063741bef1a1161004e578063741bef1a1461013c578063b60d428814610167578063be2693f014610171578063dba6335f146101885761007b565b80633ccfd60b146100805780633e47d6f31461009757806354861af7146100d45780636b69a59214610111575b600080fd5b34801561008c57600080fd5b506100956101b3565b005b3480156100a357600080fd5b506100be60048036038101906100b99190610a5c565b6103f5565b6040516100cb9190610aa2565b60405180910390f35b3480156100e057600080fd5b506100fb60048036038101906100f69190610ae9565b61040d565b6040516101089190610b25565b60405180910390f35b34801561011d57600080fd5b5061012661044c565b6040516101339190610aa2565b60405180910390f35b34801561014857600080fd5b50610151610459565b60405161015e9190610b9f565b60405180910390f35b61016f61047f565b005b34801561017d57600080fd5b506101866105b9565b005b34801561019457600080fd5b5061019d61085f565b6040516101aa9190610b25565b60405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461023a576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156102e5576000600182815481106102605761025f610bba565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806102dd90610c18565b91505061023d565b50600067ffffffffffffffff81111561030157610300610c60565b5b60405190808252806020026020018201604052801561032f5781602001602082028036833780820191505090505b5060019080519060200190610345929190610952565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161036c90610cc0565b60006040518083038185875af1925050503d80600081146103a9576040519150601f19603f3d011682016040523d82523d6000602084013e6103ae565b606091505b50509050806103f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e990610d32565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6001818154811061041d57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b18800006104be600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461088590919063ffffffff16565b10156104ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f690610d9e565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461054d9190610dbe565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610640576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106c457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161067a575b5050505050905060005b815181101561074e5760008282815181106106ec576106eb610bba565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061074690610c18565b9150506106ce565b50600067ffffffffffffffff81111561076a57610769610c60565b5b6040519080825280602002602001820160405280156107985781602001602082028036833780820191505090505b50600190805190602001906107ae929190610952565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516107d590610cc0565b60006040518083038185875af1925050503d8060008114610812576040519150601f19603f3d011682016040523d82523d6000602084013e610817565b606091505b505090508061085b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085290610d32565b60405180910390fd5b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080610891836108c1565b90506000670de0b6b3a764000085836108aa9190610e14565b6108b49190610e9d565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561090f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109339190610f5b565b5050509150506402540be4008161094a9190610fd6565b915050919050565b8280548282559060005260206000209081019282156109cb579160200282015b828111156109ca5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610972565b5b5090506109d891906109dc565b5090565b5b808211156109f55760008160009055506001016109dd565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a29826109fe565b9050919050565b610a3981610a1e565b8114610a4457600080fd5b50565b600081359050610a5681610a30565b92915050565b600060208284031215610a7257610a716109f9565b5b6000610a8084828501610a47565b91505092915050565b6000819050919050565b610a9c81610a89565b82525050565b6000602082019050610ab76000830184610a93565b92915050565b610ac681610a89565b8114610ad157600080fd5b50565b600081359050610ae381610abd565b92915050565b600060208284031215610aff57610afe6109f9565b5b6000610b0d84828501610ad4565b91505092915050565b610b1f81610a1e565b82525050565b6000602082019050610b3a6000830184610b16565b92915050565b6000819050919050565b6000610b65610b60610b5b846109fe565b610b40565b6109fe565b9050919050565b6000610b7782610b4a565b9050919050565b6000610b8982610b6c565b9050919050565b610b9981610b7e565b82525050565b6000602082019050610bb46000830184610b90565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c2382610a89565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610c5557610c54610be9565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610caa600083610c8f565b9150610cb582610c9a565b600082019050919050565b6000610ccb82610c9d565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d1c600b83610cd5565b9150610d2782610ce6565b602082019050919050565b60006020820190508181036000830152610d4b81610d0f565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610d88601b83610cd5565b9150610d9382610d52565b602082019050919050565b60006020820190508181036000830152610db781610d7b565b9050919050565b6000610dc982610a89565b9150610dd483610a89565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e0957610e08610be9565b5b828201905092915050565b6000610e1f82610a89565b9150610e2a83610a89565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e6357610e62610be9565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ea882610a89565b9150610eb383610a89565b925082610ec357610ec2610e6e565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610eed81610ece565b8114610ef857600080fd5b50565b600081519050610f0a81610ee4565b92915050565b6000819050919050565b610f2381610f10565b8114610f2e57600080fd5b50565b600081519050610f4081610f1a565b92915050565b600081519050610f5581610abd565b92915050565b600080600080600060a08688031215610f7757610f766109f9565b5b6000610f8588828901610efb565b9550506020610f9688828901610f31565b9450506040610fa788828901610f46565b9350506060610fb888828901610f46565b9250506080610fc988828901610efb565b9150509295509295909350565b6000610fe182610f10565b9150610fec83610f10565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561102b5761102a610be9565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561106857611067610be9565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156110a5576110a4610be9565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156110e2576110e1610be9565b5b82820290509291505056fea26469706673582212201ad1d4b3f9aa4278911137921eb7b7b3a276dcde170f750cf686adf2f5b7c96e64736f6c634300080e0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}