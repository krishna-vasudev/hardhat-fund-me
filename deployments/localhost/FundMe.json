{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAdress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x6a687f421da2b7090afc6532459c829bb317b71e67cae6b510ecdb297d1e24d7",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "892889",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x9e7a5077348a13acd71fccf8c594efbbd15e4089178a81fe0fbb01f280087593",
    "transactionHash": "0x6a687f421da2b7090afc6532459c829bb317b71e67cae6b510ecdb297d1e24d7",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "892889",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "d78dbf45bc1a01204fa0ca53fca59737",
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAdress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address[] public funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public /* immutable */ i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n    AggregatorV3Interface public priceFeed;\\n    constructor(address priceFeedAdress) {\\n        i_owner = msg.sender;\\n        priceFeed=AggregatorV3Interface(priceFeedAdress);\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n    \\n    \\n    \\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n    \\n    function withdraw() public onlyOwner {\\n        for (uint256 funderIndex=0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n    \\n\\n}\",\"keccak256\":\"0x7c9744c5d200a7587c4a6a02d1febc102549c55ef5b53d9614f601b0759b991f\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        // Sepolia ETH / USD Address\\n        // https://docs.chain.link/data-feeds/price-feeds/addresses#Sepolia%20Testnet\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n        // or (Both will do the same thing)\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(uint256 ethAmount,AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\",\"keccak256\":\"0x42751a6e8b4ecc3ccb738d6f72bc138adb1a95ab6e0acd71be42c2687b7aa26f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610fb4380380610fb48339818101604052810190610032919061011d565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061014a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ea826100bf565b9050919050565b6100fa816100df565b811461010557600080fd5b50565b600081519050610117816100f1565b92915050565b600060208284031215610133576101326100ba565b5b600061014184828501610108565b91505092915050565b610e5b806101596000396000f3fe6080604052600436106100705760003560e01c8063741bef1a1161004e578063741bef1a146100f4578063b60d42881461011f578063dba6335f14610129578063dc0d3dff1461015457610070565b80633ccfd60b146100755780633e47d6f31461008c5780636b69a592146100c9575b600080fd5b34801561008157600080fd5b5061008a610191565b005b34801561009857600080fd5b506100b360048036038101906100ae9190610794565b6103d3565b6040516100c091906107da565b60405180910390f35b3480156100d557600080fd5b506100de6103eb565b6040516100eb91906107da565b60405180910390f35b34801561010057600080fd5b506101096103f8565b6040516101169190610854565b60405180910390f35b61012761041e565b005b34801561013557600080fd5b5061013e610558565b60405161014b919061087e565b60405180910390f35b34801561016057600080fd5b5061017b600480360381019061017691906108c5565b61057e565b604051610188919061087e565b60405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610218576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156102c35760006001828154811061023e5761023d6108f2565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806102bb90610950565b91505061021b565b50600067ffffffffffffffff8111156102df576102de610998565b5b60405190808252806020026020018201604052801561030d5781602001602082028036833780820191505090505b506001908051906020019061032392919061068a565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161034a906109f8565b60006040518083038185875af1925050503d8060008114610387576040519150601f19603f3d011682016040523d82523d6000602084013e61038c565b606091505b50509050806103d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c790610a6a565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000061045d600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105bd90919063ffffffff16565b101561049e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049590610ad6565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104ec9190610af6565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061058e57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105c9836105f9565b90506000670de0b6b3a764000085836105e29190610b4c565b6105ec9190610bd5565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610647573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066b9190610c93565b5050509150506402540be400816106829190610d0e565b915050919050565b828054828255906000526020600020908101928215610703579160200282015b828111156107025782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106aa565b5b5090506107109190610714565b5090565b5b8082111561072d576000816000905550600101610715565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061076182610736565b9050919050565b61077181610756565b811461077c57600080fd5b50565b60008135905061078e81610768565b92915050565b6000602082840312156107aa576107a9610731565b5b60006107b88482850161077f565b91505092915050565b6000819050919050565b6107d4816107c1565b82525050565b60006020820190506107ef60008301846107cb565b92915050565b6000819050919050565b600061081a61081561081084610736565b6107f5565b610736565b9050919050565b600061082c826107ff565b9050919050565b600061083e82610821565b9050919050565b61084e81610833565b82525050565b60006020820190506108696000830184610845565b92915050565b61087881610756565b82525050565b6000602082019050610893600083018461086f565b92915050565b6108a2816107c1565b81146108ad57600080fd5b50565b6000813590506108bf81610899565b92915050565b6000602082840312156108db576108da610731565b5b60006108e9848285016108b0565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061095b826107c1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361098d5761098c610921565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b60006109e26000836109c7565b91506109ed826109d2565b600082019050919050565b6000610a03826109d5565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610a54600b83610a0d565b9150610a5f82610a1e565b602082019050919050565b60006020820190508181036000830152610a8381610a47565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610ac0601b83610a0d565b9150610acb82610a8a565b602082019050919050565b60006020820190508181036000830152610aef81610ab3565b9050919050565b6000610b01826107c1565b9150610b0c836107c1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b4157610b40610921565b5b828201905092915050565b6000610b57826107c1565b9150610b62836107c1565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b9b57610b9a610921565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610be0826107c1565b9150610beb836107c1565b925082610bfb57610bfa610ba6565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c2581610c06565b8114610c3057600080fd5b50565b600081519050610c4281610c1c565b92915050565b6000819050919050565b610c5b81610c48565b8114610c6657600080fd5b50565b600081519050610c7881610c52565b92915050565b600081519050610c8d81610899565b92915050565b600080600080600060a08688031215610caf57610cae610731565b5b6000610cbd88828901610c33565b9550506020610cce88828901610c69565b9450506040610cdf88828901610c7e565b9350506060610cf088828901610c7e565b9250506080610d0188828901610c33565b9150509295509295909350565b6000610d1982610c48565b9150610d2483610c48565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d6357610d62610921565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610da057610d9f610921565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610ddd57610ddc610921565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e1a57610e19610921565b5b82820290509291505056fea2646970667358221220debcbf2d422fc8bc538de4fa6ba6e4c20b1faccfbf081e281266d1d9d7e3109964736f6c634300080e0033",
  "deployedBytecode": "0x6080604052600436106100705760003560e01c8063741bef1a1161004e578063741bef1a146100f4578063b60d42881461011f578063dba6335f14610129578063dc0d3dff1461015457610070565b80633ccfd60b146100755780633e47d6f31461008c5780636b69a592146100c9575b600080fd5b34801561008157600080fd5b5061008a610191565b005b34801561009857600080fd5b506100b360048036038101906100ae9190610794565b6103d3565b6040516100c091906107da565b60405180910390f35b3480156100d557600080fd5b506100de6103eb565b6040516100eb91906107da565b60405180910390f35b34801561010057600080fd5b506101096103f8565b6040516101169190610854565b60405180910390f35b61012761041e565b005b34801561013557600080fd5b5061013e610558565b60405161014b919061087e565b60405180910390f35b34801561016057600080fd5b5061017b600480360381019061017691906108c5565b61057e565b604051610188919061087e565b60405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610218576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156102c35760006001828154811061023e5761023d6108f2565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806102bb90610950565b91505061021b565b50600067ffffffffffffffff8111156102df576102de610998565b5b60405190808252806020026020018201604052801561030d5781602001602082028036833780820191505090505b506001908051906020019061032392919061068a565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161034a906109f8565b60006040518083038185875af1925050503d8060008114610387576040519150601f19603f3d011682016040523d82523d6000602084013e61038c565b606091505b50509050806103d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c790610a6a565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000061045d600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105bd90919063ffffffff16565b101561049e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049590610ad6565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104ec9190610af6565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061058e57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105c9836105f9565b90506000670de0b6b3a764000085836105e29190610b4c565b6105ec9190610bd5565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610647573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066b9190610c93565b5050509150506402540be400816106829190610d0e565b915050919050565b828054828255906000526020600020908101928215610703579160200282015b828111156107025782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106aa565b5b5090506107109190610714565b5090565b5b8082111561072d576000816000905550600101610715565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061076182610736565b9050919050565b61077181610756565b811461077c57600080fd5b50565b60008135905061078e81610768565b92915050565b6000602082840312156107aa576107a9610731565b5b60006107b88482850161077f565b91505092915050565b6000819050919050565b6107d4816107c1565b82525050565b60006020820190506107ef60008301846107cb565b92915050565b6000819050919050565b600061081a61081561081084610736565b6107f5565b610736565b9050919050565b600061082c826107ff565b9050919050565b600061083e82610821565b9050919050565b61084e81610833565b82525050565b60006020820190506108696000830184610845565b92915050565b61087881610756565b82525050565b6000602082019050610893600083018461086f565b92915050565b6108a2816107c1565b81146108ad57600080fd5b50565b6000813590506108bf81610899565b92915050565b6000602082840312156108db576108da610731565b5b60006108e9848285016108b0565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061095b826107c1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361098d5761098c610921565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b60006109e26000836109c7565b91506109ed826109d2565b600082019050919050565b6000610a03826109d5565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610a54600b83610a0d565b9150610a5f82610a1e565b602082019050919050565b60006020820190508181036000830152610a8381610a47565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610ac0601b83610a0d565b9150610acb82610a8a565b602082019050919050565b60006020820190508181036000830152610aef81610ab3565b9050919050565b6000610b01826107c1565b9150610b0c836107c1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b4157610b40610921565b5b828201905092915050565b6000610b57826107c1565b9150610b62836107c1565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b9b57610b9a610921565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610be0826107c1565b9150610beb836107c1565b925082610bfb57610bfa610ba6565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c2581610c06565b8114610c3057600080fd5b50565b600081519050610c4281610c1c565b92915050565b6000819050919050565b610c5b81610c48565b8114610c6657600080fd5b50565b600081519050610c7881610c52565b92915050565b600081519050610c8d81610899565b92915050565b600080600080600060a08688031215610caf57610cae610731565b5b6000610cbd88828901610c33565b9550506020610cce88828901610c69565b9450506040610cdf88828901610c7e565b9350506060610cf088828901610c7e565b9250506080610d0188828901610c33565b9150509295509295909350565b6000610d1982610c48565b9150610d2483610c48565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d6357610d62610921565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610da057610d9f610921565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610ddd57610ddc610921565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e1a57610e19610921565b5b82820290509291505056fea2646970667358221220debcbf2d422fc8bc538de4fa6ba6e4c20b1faccfbf081e281266d1d9d7e3109964736f6c634300080e0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 323,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 326,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 328,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 338,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)104"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)104": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}